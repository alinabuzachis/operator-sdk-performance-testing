---
- name: Prepare host for benchmark.
  hosts: operator_sdk_perftest
  become: true

  vars:
    operator_sdk_version: v1.6.2
    kind_version: v0.8.1
    kubectl_version: v1.20.5

  pre_tasks:
    - name: Ensure apt caches are up to date.
      apt:
        update_cache: true

  roles:
    - role: geerlingguy.docker

  tasks:
    - name: Install required packages.
      apt:
        name:
          - golang
          - python3-pip
        state: present

    - name: Install test dependencies.
      pip:
        name:
          - ansible==2.10
          - yamllint
          - docker
          - molecule==3.2.4
          - openshift==0.11
        state: present

    - name: Download kubectl.
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/linux/amd64/kubectl
        dest: /usr/bin/kubectl
        mode: 0755
      
    - name: Download Operator SDK. (v1.8.0)
      get_url:
        url: "https://github.com/operator-framework/operator-sdk/releases/download/{{ operator_sdk_version }}/{{ item }}_linux_amd64"
        dest: /usr/bin/{{ item }}
        mode: 0755
      loop:
        - operator-sdk
        - ansible-operator
        #- helm-operator     
    
    - name: Download Kind.
      get_url:
        url: https://kind.sigs.k8s.io/dl/{{ kind_version }}/kind-linux-amd64
        dest: /usr/bin/kind
        mode: 0755

- name: Run benchmark.
  hosts: operator_sdk_perftest
  become: true

  tasks:
    - name: Generate unique number for each host
      set_fact:
        random_number: "{{ 100 | random }}"
  
    - name: Clone operator-sdk-performance-testing project.
      git:
        repo: https://github.com/alinabuzachis/operator-sdk-performance-testing.git
        version: bench
        dest: ~/operator-sdk-performance-testing
        force: yes
  
    - name: Run molecule test scenarios.
      command: molecule test -s kind
      args:
        chdir: ~/operator-sdk-performance-testing
      environment:
        OPERATOR_UNDER_TEST: "{{ item }}"
      register: molecule_result
      tags: ['molecule']
      loop:
        - ansible
        #- go
        #- helm
    
    - name: Pause to allow to get results.
      pause:
        seconds: 10

    - name: Store results in a local result file.
      copy:
        content: "{{ item.stdout }}"
        dest: "./3-sdk-1.6.2-k8s-2.0.0/{{ random_number }}_result-{{ item.item }}.txt"
        mode: 0664
      loop: "{{ molecule_result.results }}"
      delegate_to: localhost
      no_log: true
      become: false
      tags: ['molecule']
